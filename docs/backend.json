{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the Social Swirl platform.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user.",
          "format": "uuid"
        },
        "fullName": {
          "type": "string",
          "description": "The full name of the user."
        },
        "email": {
          "type": "string",
          "description": "The email address of the user.",
          "format": "email"
        },
        "brandInfo": {
          "type": "string",
          "description": "Information about the user's brand or business."
        },
        "writingStyleIds": {
          "type": "array",
          "description": "References to Writing Styles selected by the user. (Relationship: User 1:N WritingStyle)",
          "items": {
            "type": "string"
          }
        },
        "preferenceIds": {
          "type": "array",
          "description": "References to Preferences selected by the user. (Relationship: User 1:N Preference)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "fullName",
        "email",
        "brandInfo"
      ]
    },
    "WritingStyle": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "WritingStyle",
      "type": "object",
      "description": "Represents a writing style option.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the writing style.",
          "format": "uuid"
        },
        "name": {
          "type": "string",
          "description": "The name of the writing style."
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "Preference": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Preference",
      "type": "object",
      "description": "Represents a user preference topic.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the preference.",
          "format": "uuid"
        },
        "name": {
          "type": "string",
          "description": "The name of the preference."
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "Post": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Post",
      "type": "object",
      "description": "Represents a social media post generated by the AI.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the post.",
          "format": "uuid"
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User who created the post. (Relationship: User 1:N Post)"
        },
        "content": {
          "type": "string",
          "description": "The text content of the post."
        },
        "imageUrl": {
          "type": "string",
          "description": "URL of the image associated with the post, if any.",
          "format": "uri"
        },
        "platform": {
          "type": "string",
          "description": "The social media platform for which the post is intended."
        },
        "scheduledTime": {
          "type": "string",
          "description": "The date and time the post is scheduled to be published.",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "The status of the post (e.g., scheduled, published, draft)."
        }
      },
      "required": [
        "id",
        "userId",
        "content",
        "platform"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information. The `userId` parameter is the Firebase Auth UID.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user, corresponding to the Firebase Auth UID."
            }
          ]
        }
      },
      {
        "path": "/writingStyles/{writingStyleId}",
        "definition": {
          "entityName": "WritingStyle",
          "schema": {
            "$ref": "#/backend/entities/WritingStyle"
          },
          "description": "Stores available writing styles. Open read access, managed by admins.",
          "params": [
            {
              "name": "writingStyleId",
              "description": "The unique identifier for the writing style."
            }
          ]
        }
      },
      {
        "path": "/preferences/{preferenceId}",
        "definition": {
          "entityName": "Preference",
          "schema": {
            "$ref": "#/backend/entities/Preference"
          },
          "description": "Stores available preferences/topics. Open read access, managed by admins.",
          "params": [
            {
              "name": "preferenceId",
              "description": "The unique identifier for the preference."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/posts/{postId}",
        "definition": {
          "entityName": "Post",
          "schema": {
            "$ref": "#/backend/entities/Post"
          },
          "description": "Stores social media posts created by the user. Secured by path-based ownership.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user who owns the post."
            },
            {
              "name": "postId",
              "description": "The unique identifier for the post."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore data structure is designed to support the 'Post Automation Platform' (formerly Social Swirl) application, focusing on secure, scalable, and easily maintainable data access patterns.  The core principle is Authorization Independence, achieved through denormalization, and Structural Segregation to ensure homogeneous security postures for collections.\n\n**Authorization Independence:** The `/users/{userId}/posts/{postId}` structure inherently provides authorization independence. Access control for a `Post` is directly tied to the `userId` in the path; no parent document lookup is needed. This supports atomic operations (transactions and batches) and simplifies security rules.\n\n**QAPs (Rules are not Filters):**  The chosen structure, especially with path-based ownership for posts (`/users/{userId}/posts/{postId}`), directly supports secure list operations.  A rule can simply check `request.auth.uid == userId` for listing posts, preventing unauthorized access. The segregation of data by user ensures that rules don't need to filter data based on attributes, as all posts within a user's collection are owned by that user.\n\n**Structural Segregation:**  User data and preferences are stored separately from posts.  This means the security requirements for user profiles and posts can be managed independently. The `writingStyles` and `preferences` collections are globally accessible (read-only) and primarily used to populate registration/profile UIs. This design avoids mixing data with differing access needs within the same collection.\n\n**Invariants:** The structure supports the integrity of ownership. Every post is associated with a specific user via the path (`/users/{userId}/posts/{postId}`), which makes it straightforward to enforce ownership rules. Timestamps can be added to the Post entity itself. Denormalization can be applied to other entities, such as projects, to provide extra details needed for post scheduling."
  }
}